GENOMESDIR="/storage/mgymrek/TReeofLife/genomes"
TRFDIR="/storage/mgymrek/TReeofLife/trf"
YJDIR="/storage/mgymrek/TReeofLife/SnakemakeTest"

wildcard_constraints:
    species="[^.]*"

SPECIES = ["ce11","sacCer3"] # TODO this could eventually read from a file once this list gets very long

rule all:
    input:
        [("%s/{species}/{species}.str_base.txt"%YJDIR).format(species=species) for species in SPECIES]

rule index_fa:
    input:
        "%s/{species}/{species}.fa"%GENOMESDIR
    output:
        "%s/{species}/{species}.fa.fai"%GENOMESDIR
    shell:
        "samtools faidx {input}"

# This rule splits a single fasta file by chrom
# It additionally outputs {species}.chrom, so that the rule has an output file to check
rule split_fa:
    input:
        "%s/{species}/{species}.fa"%GENOMESDIR,
        "%s/{species}/{species}.fa.fai"%GENOMESDIR
    output:
        "%s/{species}/bychrom/{species}.chroms"%GENOMESDIR
    shell:
        "./split_fa.sh {GENOMESDIR} {wildcards.species}"

# Run TRF on each chromosome, and output to a single TRF bed file per species
rule run_trf:
    input:
        "%s/{species}/bychrom/{species}.chroms"%GENOMESDIR
    output:
        "%s/{species}/{species}.trf.bed"%TRFDIR
    shell:
        "./make_trf.sh {GENOMESDIR} {wildcards.species} {output}"

# Filter initial TRF output
rule filter_trf:
    input:
        "%s/{species}/{species}.trf.bed"%TRFDIR
    output:
        "%s/{species}/{species}.trf.filt.bed"%TRFDIR
    shell:
        "python3 filter_TRF_nopandas.py {input} {output}"

# TODO - below make a different rule for stats on each TRF file
# Save those results to files in TRFDIR/{species}
# Can have nother rule that will combine stats across all species to a big table

#count for homopolymer, dinucleotide, etc.,
rule str_count:
    input:
        "%s/{species}/{species}.trf.filt.bed"%TRFDIR 
    output:
         "%s/{species}/{species}.str_count.txt"%YJDIR
    shell:
        "for period in $(seq 1 6); do awk -v\"period=$period\" '$4==period'  {input} | wc -l | awk -v\"period=$period\" '{{print period \"\t\" $0}}' ; done > {output}"

#count the length of entire genome
rule genome_length:
    input:
        "%s/{species}/{species}.str_count.txt"%YJDIR, "%s/{species}/{species}.trf.filt.bed"%TRFDIR
    output:
        "%s/{species}/{species}.genome_length.txt"%YJDIR
    shell:
         "awk '{{print $2}}' input[1] | awk '{{ sum+=$1 }}END{{ print sum }}' > {output}"

#count the number of str base
rule str_base:
    input:
        "%s/{species}/{species}.genome_length.txt"%YJDIR, "%s/{species}/{species}.trf.filt.bed"%TRFDIR
    output:
        "%s/{species}/{species}.str_base.txt"%YJDIR
    shell:
         "awk '{{print length($4)}}'  input[1] | awk '{{sum+=$1 }}END{{ print sum }}'> {output}"